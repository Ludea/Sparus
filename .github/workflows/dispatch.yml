name: Build custom launcher

on:
  workflow_dispatch:
    inputs:
      filename:
        description: "Store file"
        required: true
        default: "Sparus.json"
      content:
        description: "Default value for store"
        required: true
        default: '{"game_name": ""}'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
            target: linux_x86_64
            host: linux
          - platform: macos-latest
            rust_target: x86_64-apple-darwin
            target: macos_x86_64
            host: macos_x86_64
          - platform: macos-latest
            rust_target: aarch64-apple-darwin
            target: macos_aarch64
            host: macos_arm64
          - platform: windows-latest
            rust_target: x86_64-pc-windows-msvc
            target: windows_x86_64
            host: win64

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v5
      - name: Create json store
        run: |
          echo '${{ inputs.content }}' > '${{ inputs.filename }}.tmp'
          jq '.' ${{ inputs.filename }}.tmp > src-tauri/${{ inputs.filename }}
      - name: Get game name
        shell: bash
        run: echo "GAME_NAME=$(jq -r '.game_name' src-tauri/${{ inputs.filename }})" >> $GITHUB_ENV
      - name: Download Background image and logo
        run: |
          curl --output-dir --fail src/assets -LJO ${{ secrets.STORE_URL }}/${{ env.GAME_NAME }}/launcher/DesktopBackground.jpg
          curl --output-dir --fail src-tauri/icons -LJO ${{ secrets.STORE_URL }}/${{ env.GAME_NAME }}/launcher/icon.png
      - name: setup node
        uses: actions/setup-node@v6
        with:
          node-version: 20
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
          target: ${{ matrix.rust_target }}
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri/
      - name: install webkit2gtk (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install app dependencies
        run: pnpm install
      - name: Generate icons
        run: pnpm tauri icon src-tauri/icons/icon.png
      - name: Prettier
        run: pnpm prettier
      - name: Lint
        run: pnpm lint
      - name: Build interface
        run: pnpm build
      - name: fmt
        run: cargo fmt --manifest-path src-tauri/Cargo.toml --all -- --check
      - name: Clippy
        run: cargo clippy --manifest-path=src-tauri/Cargo.toml --all-targets --all-features -- -D warnings
      - uses: Ludea/tauri-build@next
        id: build
        with:
          target: ${{ matrix.rust_target }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          STRONGHOLD_SALT: ${{ secrets.STRONGHOLD_SALT }}
      - name: Upload Binaries to Update Server
        run: curl -X POST -F "file=@${{ join(fromJSON(steps.build.outputs.artifacts), '\n') }}" ${{ secrets.STORE_URL }}/${{ env.GAME_NAME }}/launcher/binaries/${{ matrix.platform.host }}
      - uses: actions/upload-artifact@v5
        with:
          name: Sparus_${{ matrix.target }}
          path: "${{ join(fromJSON(steps.build.outputs.artifacts), '\n') }}"
          if-no-files-found: error
